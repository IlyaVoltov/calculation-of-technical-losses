{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy  as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "topo_df  = pd.read_csv('C://Users/ИТ ФИЦ/Desktop/Test/topo_2199 - topology.csv') \\\n",
    "                      .set_index('branch_id')\n",
    "link_df  = topo_df[topo_df.type.isin(['Link'])]\n",
    "equip_df = topo_df[topo_df.type.isin(['Link']) == False]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Загрузка данных о приборах учета \n",
    "measure_unit = pd.read_csv('C://Users/ИТ ФИЦ/Desktop/Test/TS_2199/topo_2199 - measure_unit.csv') \\\n",
    "               .set_index('terminal_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Загрузка данных о кабелях и их параметров\n",
    "ac_line  = pd.read_csv('C://Users/ИТ ФИЦ/Desktop/Test/topo_2199 - line.csv') \\\n",
    "               .set_index('branch_id')\n",
    "std_cable = pd.read_csv('C://Users/ИТ ФИЦ/Desktop/Test/TS_2199/topo_2199 - std_cable.csv') \\\n",
    "               .set_index('cable_type')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Загрузка данных по показаниям активной мощности ПУ\n",
    "meter_act = pd.read_csv('C://Users/ИТ ФИЦ/Desktop/Test/active_power.csv') \\\n",
    "                        .set_index('measure_id').T\n",
    "# Загрузка данных по показаниям реактивной мощности ПУ\n",
    "meter_react = pd.read_csv('C://Users/ИТ ФИЦ/Desktop/Test/reactive_power.csv') \\\n",
    "                        .set_index('measure_id').T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "balance_group = topo_df.groupby('bg_num').get_group(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>node_start</th>\n",
       "      <th>node_end</th>\n",
       "      <th>name</th>\n",
       "      <th>type</th>\n",
       "      <th>bg_num</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>branch_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0b793198-6ff5-4d9c-a399-5344fe6d22ad</th>\n",
       "      <td>4ec22423-b389-403b-b4e0-b85a33f7832f</td>\n",
       "      <td>d7fad018-36da-491e-97ea-c18f98aff064</td>\n",
       "      <td>ТП 2199/1 - ГРЩ/Б (Науки, 63)</td>\n",
       "      <td>ACLineSegment</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>e78cfe21-aa35-428d-a899-a8fe61f8303f</th>\n",
       "      <td>48b2a15b-5838-4874-8461-d76587769de5</td>\n",
       "      <td>d888d625-8125-40a2-a4c8-ca2e39318bc7</td>\n",
       "      <td>ТП 2199/1 - ГРЩ/Г (Науки, 63)</td>\n",
       "      <td>ACLineSegment</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>f6243247-bef6-4fde-b1fe-14da3030aec8</th>\n",
       "      <td>95d13c84-eb63-45fa-b60b-b960c2c536e4</td>\n",
       "      <td>aa4b235d-7e74-4a6d-b395-b014c21e96a1</td>\n",
       "      <td>ТП 2199/2 - ГРЩ/А (Науки, 63)</td>\n",
       "      <td>ACLineSegment</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>eb9afe5a-cdb3-4083-bcd2-d346ad84fa92</th>\n",
       "      <td>ff760945-68fd-4780-97ce-c71a9e68d028</td>\n",
       "      <td>38c1a842-0791-4f04-958b-ee8210d23ac5</td>\n",
       "      <td>ТП 2199/2 - ГРЩ/Д (Науки, 63)</td>\n",
       "      <td>ACLineSegment</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>f4955d3f-6438-4a85-984d-10b216bb700e</th>\n",
       "      <td>d7fad018-36da-491e-97ea-c18f98aff064</td>\n",
       "      <td>57ea588b-9b47-4f26-9d0e-faa58d677139</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Link</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>d4b6edcd-d4ba-4715-9951-76484057bfef</th>\n",
       "      <td>d888d625-8125-40a2-a4c8-ca2e39318bc7</td>\n",
       "      <td>57ea588b-9b47-4f26-9d0e-faa58d677139</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Link</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ad85bff8-d78e-430b-842c-d4363fcbc371</th>\n",
       "      <td>aa4b235d-7e74-4a6d-b395-b014c21e96a1</td>\n",
       "      <td>57ea588b-9b47-4f26-9d0e-faa58d677139</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Link</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c048a6e9-00dc-4950-b9b5-3dda7143aec5</th>\n",
       "      <td>38c1a842-0791-4f04-958b-ee8210d23ac5</td>\n",
       "      <td>57ea588b-9b47-4f26-9d0e-faa58d677139</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Link</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>af06a78f-0fa5-4f4d-b3d6-93561dc05949</th>\n",
       "      <td>57ea588b-9b47-4f26-9d0e-faa58d677139</td>\n",
       "      <td>b30409bf-d89b-4bbd-90db-18767d2ff710</td>\n",
       "      <td>пр-кт Науки, д. 63 литера А</td>\n",
       "      <td>ConsumerBuilding</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                node_start  \\\n",
       "branch_id                                                                    \n",
       "0b793198-6ff5-4d9c-a399-5344fe6d22ad  4ec22423-b389-403b-b4e0-b85a33f7832f   \n",
       "e78cfe21-aa35-428d-a899-a8fe61f8303f  48b2a15b-5838-4874-8461-d76587769de5   \n",
       "f6243247-bef6-4fde-b1fe-14da3030aec8  95d13c84-eb63-45fa-b60b-b960c2c536e4   \n",
       "eb9afe5a-cdb3-4083-bcd2-d346ad84fa92  ff760945-68fd-4780-97ce-c71a9e68d028   \n",
       "f4955d3f-6438-4a85-984d-10b216bb700e  d7fad018-36da-491e-97ea-c18f98aff064   \n",
       "d4b6edcd-d4ba-4715-9951-76484057bfef  d888d625-8125-40a2-a4c8-ca2e39318bc7   \n",
       "ad85bff8-d78e-430b-842c-d4363fcbc371  aa4b235d-7e74-4a6d-b395-b014c21e96a1   \n",
       "c048a6e9-00dc-4950-b9b5-3dda7143aec5  38c1a842-0791-4f04-958b-ee8210d23ac5   \n",
       "af06a78f-0fa5-4f4d-b3d6-93561dc05949  57ea588b-9b47-4f26-9d0e-faa58d677139   \n",
       "\n",
       "                                                                  node_end  \\\n",
       "branch_id                                                                    \n",
       "0b793198-6ff5-4d9c-a399-5344fe6d22ad  d7fad018-36da-491e-97ea-c18f98aff064   \n",
       "e78cfe21-aa35-428d-a899-a8fe61f8303f  d888d625-8125-40a2-a4c8-ca2e39318bc7   \n",
       "f6243247-bef6-4fde-b1fe-14da3030aec8  aa4b235d-7e74-4a6d-b395-b014c21e96a1   \n",
       "eb9afe5a-cdb3-4083-bcd2-d346ad84fa92  38c1a842-0791-4f04-958b-ee8210d23ac5   \n",
       "f4955d3f-6438-4a85-984d-10b216bb700e  57ea588b-9b47-4f26-9d0e-faa58d677139   \n",
       "d4b6edcd-d4ba-4715-9951-76484057bfef  57ea588b-9b47-4f26-9d0e-faa58d677139   \n",
       "ad85bff8-d78e-430b-842c-d4363fcbc371  57ea588b-9b47-4f26-9d0e-faa58d677139   \n",
       "c048a6e9-00dc-4950-b9b5-3dda7143aec5  57ea588b-9b47-4f26-9d0e-faa58d677139   \n",
       "af06a78f-0fa5-4f4d-b3d6-93561dc05949  b30409bf-d89b-4bbd-90db-18767d2ff710   \n",
       "\n",
       "                                                               name  \\\n",
       "branch_id                                                             \n",
       "0b793198-6ff5-4d9c-a399-5344fe6d22ad  ТП 2199/1 - ГРЩ/Б (Науки, 63)   \n",
       "e78cfe21-aa35-428d-a899-a8fe61f8303f  ТП 2199/1 - ГРЩ/Г (Науки, 63)   \n",
       "f6243247-bef6-4fde-b1fe-14da3030aec8  ТП 2199/2 - ГРЩ/А (Науки, 63)   \n",
       "eb9afe5a-cdb3-4083-bcd2-d346ad84fa92  ТП 2199/2 - ГРЩ/Д (Науки, 63)   \n",
       "f4955d3f-6438-4a85-984d-10b216bb700e                            NaN   \n",
       "d4b6edcd-d4ba-4715-9951-76484057bfef                            NaN   \n",
       "ad85bff8-d78e-430b-842c-d4363fcbc371                            NaN   \n",
       "c048a6e9-00dc-4950-b9b5-3dda7143aec5                            NaN   \n",
       "af06a78f-0fa5-4f4d-b3d6-93561dc05949    пр-кт Науки, д. 63 литера А   \n",
       "\n",
       "                                                  type  bg_num  \n",
       "branch_id                                                       \n",
       "0b793198-6ff5-4d9c-a399-5344fe6d22ad     ACLineSegment       1  \n",
       "e78cfe21-aa35-428d-a899-a8fe61f8303f     ACLineSegment       1  \n",
       "f6243247-bef6-4fde-b1fe-14da3030aec8     ACLineSegment       1  \n",
       "eb9afe5a-cdb3-4083-bcd2-d346ad84fa92     ACLineSegment       1  \n",
       "f4955d3f-6438-4a85-984d-10b216bb700e              Link       1  \n",
       "d4b6edcd-d4ba-4715-9951-76484057bfef              Link       1  \n",
       "ad85bff8-d78e-430b-842c-d4363fcbc371              Link       1  \n",
       "c048a6e9-00dc-4950-b9b5-3dda7143aec5              Link       1  \n",
       "af06a78f-0fa5-4f4d-b3d6-93561dc05949  ConsumerBuilding       1  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "balance_group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def node_group(branch_full):\n",
    "    \n",
    "    ### Функция, формирующая список смежных вершин - adjacency list ###\n",
    "    \n",
    "    dict_node = {}\n",
    "    \n",
    "    # и столбцы с начальными и конечными узлами\n",
    "    branch_topo = branch_full[['node_start', 'node_end']]\n",
    "    \n",
    "    # получаем список уникальных узлов в соответствующих столбцах\n",
    "    node_start_unique = branch_full.node_start.dropna().unique()\n",
    "    node_end_unique   = branch_full.node_end.dropna().unique()\n",
    "    \n",
    "    # обобщенный список уникальных узлов балансовой группы\n",
    "    ns_array = branch_full.node_start.dropna().to_numpy()\n",
    "    ne_array = branch_full.node_start.dropna().to_numpy()\n",
    "    \n",
    "    node_unique = np.unique(np.append(ns_array, ne_array))\n",
    "    \n",
    "    # цикл по узлам в таблице node\n",
    "    for node in node_unique:\n",
    "        \n",
    "        value = []\n",
    "        \n",
    "        # если узел в таблице узлов находится в списке уникальных начальных узлов ветвей,\n",
    "        if node in node_start_unique:\n",
    "            # то выбирается сооветствующий ему конечный узел (формат list)\n",
    "            value_end = branch_topo[branch_topo.node_start == node].node_end.to_list()\n",
    "            # и добавляется в обобщенную топологию ветвей этого узла\n",
    "            value = value + value_end\n",
    "        \n",
    "        # если узел в таблице узлов находится в списке уникальных конечных узлов ветвей,\n",
    "        if node in node_end_unique:\n",
    "            # то добавляется сооветствующий ему начальный узел (формат list)\n",
    "            value_start = branch_topo[branch_topo.node_end == node].node_start.to_list()\n",
    "            # и добавляется в обобщенную топологию ветвей этого узла\n",
    "            value = value + value_start\n",
    "        \n",
    "        # на выходе получаем словарь, где ключом является узел, а значением является список узлов\n",
    "        dict_node[node] = value\n",
    "\n",
    "    return dict_node"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "adj_list = node_group(branch_full = balance_group)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Список входных терминалов балансовых групп\n",
    "\n",
    "in_list1 = ['4ec22423-b389-403b-b4e0-b85a33f7832f',\n",
    "            '48b2a15b-5838-4874-8461-d76587769de5',\n",
    "            '95d13c84-eb63-45fa-b60b-b960c2c536e4',\n",
    "            'ff760945-68fd-4780-97ce-c71a9e68d028']\n",
    "\n",
    "in_list2 = ['84e3b2e5-3047-42ab-b7f3-3bfa762bb3eb',\n",
    "            '990af4d2-060c-4a16-850d-93fd8fae72a9']\n",
    "\n",
    "in_list3 = ['7ac6c580-21fc-4a35-bfb5-f5a5ea601dc0',\n",
    "            '9b63114c-942a-40bb-a0be-ef7c059b626c',\n",
    "            '2ce21189-8a08-4c14-92ce-f95cb9c5883b',\n",
    "            '9b63114c-942a-40bb-a0be-ef7c059b626c']\n",
    "\n",
    "in_list4 = ['df2dea8f-abbb-4ea9-bdb0-71e34451034a',\n",
    "            '35ca9162-b0d7-4894-8f60-2768e897eb4e']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "cable_type = 'АПвБбШп 4x185'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def loss_calc(in_list, meter_act, meter_react, adj_list, balance_group):\n",
    "    loss_df = pd.DataFrame([], index = meter_act.index)\n",
    "    n_list = []\n",
    "\n",
    "    for m_term in in_list:\n",
    "    \n",
    "        # Получаем идентификатор ПУ, привязанного к терминалу\n",
    "        meter_id = measure_unit[measure_unit.index == m_term] \\\n",
    "               .measure_id[0]\n",
    "    \n",
    "        # Получаем показания конкретного ПУ\n",
    "        act_power   = meter_act[meter_id]\n",
    "        react_power = meter_react[meter_id]\n",
    "    \n",
    "        # Из списка смежных вершин балансовой группы получаем идентификаторы соседних узлов\n",
    "        neigh_node = adj_list[m_term]\n",
    "    \n",
    "        r_list = []\n",
    "        i_list = []\n",
    "    \n",
    "        for n_term in neigh_node:\n",
    "        \n",
    "            n_list.append(n_term)\n",
    "        \n",
    "            check_branch = balance_group.isin([m_term, n_term])\n",
    "            branch_index = check_branch.loc[(check_branch.node_start == True) &\n",
    "                                        (check_branch.node_end   == True)] \\\n",
    "                                       .index[0]\n",
    "        \n",
    "            # Поиск ветви в списке ветвей балансовой группы\n",
    "            br_row  = balance_group[balance_group.index == branch_index]\n",
    "            name    = br_row.name[0]\n",
    "            br_type = br_row.type[0]\n",
    "        \n",
    "            if br_type == 'ACLineSegment':\n",
    "                line_row = ac_line[ac_line.index == branch_index]\n",
    "                length   = line_row.length_m[0]\n",
    "                voltage  = line_row.voltage[0]\n",
    "            \n",
    "                ct_row = std_cable[std_cable.index == cable_type]\n",
    "                r_ohm_km = ct_row.r_ohm_km_20[0]\n",
    "                i_allow  = ct_row.i_allowable[0]\n",
    "            \n",
    "                current  = (act_power ** 2 + react_power ** 2) ** 0.5 / voltage \n",
    "                k_resist = i_allow / current\n",
    "            \n",
    "                loss_rated = r_ohm_km * current ** 2 * 1e-3\n",
    "                loss_rated = loss_rated.rename(name)\n",
    "            \n",
    "                loss_df = pd.concat([loss_df, loss_rated], axis = 1)\n",
    "                \n",
    "    return loss_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "cable_loss = loss_calc(in_list1, meter_act, meter_react, adj_list, balance_group)\n",
    "cable_loss.to_csv('C://Users/ИТ ФИЦ/Desktop/Test/loss_df.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ТП 2199/1 - ГРЩ/Б (Науки, 63)</th>\n",
       "      <th>ТП 2199/1 - ГРЩ/Г (Науки, 63)</th>\n",
       "      <th>ТП 2199/2 - ГРЩ/А (Науки, 63)</th>\n",
       "      <th>ТП 2199/2 - ГРЩ/Д (Науки, 63)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-01-01 00:00:00</th>\n",
       "      <td>0.353190</td>\n",
       "      <td>5.237294</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-01 00:30:00</th>\n",
       "      <td>0.351524</td>\n",
       "      <td>4.414040</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-01 01:00:00</th>\n",
       "      <td>0.379981</td>\n",
       "      <td>4.647714</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-01 01:30:00</th>\n",
       "      <td>0.315536</td>\n",
       "      <td>4.116538</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-01 02:00:00</th>\n",
       "      <td>0.338056</td>\n",
       "      <td>4.078352</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-31 21:30:00</th>\n",
       "      <td>0.782483</td>\n",
       "      <td>7.112149</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-31 22:00:00</th>\n",
       "      <td>0.680731</td>\n",
       "      <td>6.245343</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-31 22:30:00</th>\n",
       "      <td>0.794088</td>\n",
       "      <td>6.337124</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-31 23:00:00</th>\n",
       "      <td>0.731532</td>\n",
       "      <td>5.405558</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-31 23:30:00</th>\n",
       "      <td>0.549794</td>\n",
       "      <td>4.928357</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1488 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     ТП 2199/1 - ГРЩ/Б (Науки, 63)  \\\n",
       "2020-01-01 00:00:00                       0.353190   \n",
       "2020-01-01 00:30:00                       0.351524   \n",
       "2020-01-01 01:00:00                       0.379981   \n",
       "2020-01-01 01:30:00                       0.315536   \n",
       "2020-01-01 02:00:00                       0.338056   \n",
       "...                                            ...   \n",
       "2020-01-31 21:30:00                       0.782483   \n",
       "2020-01-31 22:00:00                       0.680731   \n",
       "2020-01-31 22:30:00                       0.794088   \n",
       "2020-01-31 23:00:00                       0.731532   \n",
       "2020-01-31 23:30:00                       0.549794   \n",
       "\n",
       "                     ТП 2199/1 - ГРЩ/Г (Науки, 63)  \\\n",
       "2020-01-01 00:00:00                       5.237294   \n",
       "2020-01-01 00:30:00                       4.414040   \n",
       "2020-01-01 01:00:00                       4.647714   \n",
       "2020-01-01 01:30:00                       4.116538   \n",
       "2020-01-01 02:00:00                       4.078352   \n",
       "...                                            ...   \n",
       "2020-01-31 21:30:00                       7.112149   \n",
       "2020-01-31 22:00:00                       6.245343   \n",
       "2020-01-31 22:30:00                       6.337124   \n",
       "2020-01-31 23:00:00                       5.405558   \n",
       "2020-01-31 23:30:00                       4.928357   \n",
       "\n",
       "                     ТП 2199/2 - ГРЩ/А (Науки, 63)  \\\n",
       "2020-01-01 00:00:00                            0.0   \n",
       "2020-01-01 00:30:00                            0.0   \n",
       "2020-01-01 01:00:00                            0.0   \n",
       "2020-01-01 01:30:00                            0.0   \n",
       "2020-01-01 02:00:00                            0.0   \n",
       "...                                            ...   \n",
       "2020-01-31 21:30:00                            0.0   \n",
       "2020-01-31 22:00:00                            0.0   \n",
       "2020-01-31 22:30:00                            0.0   \n",
       "2020-01-31 23:00:00                            0.0   \n",
       "2020-01-31 23:30:00                            0.0   \n",
       "\n",
       "                     ТП 2199/2 - ГРЩ/Д (Науки, 63)  \n",
       "2020-01-01 00:00:00                            0.0  \n",
       "2020-01-01 00:30:00                            0.0  \n",
       "2020-01-01 01:00:00                            0.0  \n",
       "2020-01-01 01:30:00                            0.0  \n",
       "2020-01-01 02:00:00                            0.0  \n",
       "...                                            ...  \n",
       "2020-01-31 21:30:00                            0.0  \n",
       "2020-01-31 22:00:00                            0.0  \n",
       "2020-01-31 22:30:00                            0.0  \n",
       "2020-01-31 23:00:00                            0.0  \n",
       "2020-01-31 23:30:00                            0.0  \n",
       "\n",
       "[1488 rows x 4 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cable_loss"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
